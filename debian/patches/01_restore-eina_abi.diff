diff --git a/src/lib/Makefile.am b/src/lib/Makefile.am
index 19e9175..8f1cdbf 100644
--- a/src/lib/Makefile.am
+++ b/src/lib/Makefile.am
@@ -51,7 +51,8 @@ eina_unicode.c \
 eina_ustrbuf.c \
 eina_ustringshare.c \
 eina_value.c \
-eina_xattr.c
+eina_xattr.c \
+eina_abi.c
 
 # Will be back for developper after 1.2
 # eina_model.c \
diff --git a/src/lib/Makefile.in b/src/lib/Makefile.in
index 0547713..1498003 100644
--- a/src/lib/Makefile.in
+++ b/src/lib/Makefile.in
@@ -113,7 +113,7 @@ am__libeina_la_SOURCES_DIST = eina_accessor.c eina_array.c \
 	eina_sched.c eina_share_common.c eina_simple_xml_parser.c \
 	eina_str.c eina_strbuf.c eina_strbuf_common.c \
 	eina_stringshare.c eina_tiler.c eina_unicode.c eina_ustrbuf.c \
-	eina_ustringshare.c eina_value.c eina_xattr.c \
+	eina_ustringshare.c eina_value.c eina_xattr.c eina_abi.c \
 	eina_file_win32.c eina_file.c \
 	$(top_srcdir)/src/modules/mp/buddy/eina_buddy.c \
 	$(top_srcdir)/src/modules/mp/chained_pool/eina_chained_mempool.c \
@@ -148,7 +148,7 @@ am__objects_10 = eina_accessor.lo eina_array.lo eina_benchmark.lo \
 	eina_simple_xml_parser.lo eina_str.lo eina_strbuf.lo \
 	eina_strbuf_common.lo eina_stringshare.lo eina_tiler.lo \
 	eina_unicode.lo eina_ustrbuf.lo eina_ustringshare.lo \
-	eina_value.lo eina_xattr.lo $(am__objects_1) $(am__objects_2) \
+	eina_value.lo eina_xattr.lo eina_abi.lo $(am__objects_1) $(am__objects_2) \
 	$(am__objects_3) $(am__objects_4) $(am__objects_5) \
 	$(am__objects_6) $(am__objects_7) $(am__objects_8) \
 	$(am__objects_9)
@@ -380,7 +380,7 @@ base_sources = eina_accessor.c eina_array.c eina_benchmark.c \
 	eina_simple_xml_parser.c eina_str.c eina_strbuf.c \
 	eina_strbuf_common.c eina_stringshare.c eina_tiler.c \
 	eina_unicode.c eina_ustrbuf.c eina_ustringshare.c eina_value.c \
-	eina_xattr.c $(am__append_1) $(am__append_2) $(am__append_3) \
+	eina_xattr.c eina_abi.c $(am__append_1) $(am__append_2) $(am__append_3) \
 	$(am__append_4) $(am__append_5) $(am__append_6) \
 	$(am__append_7) $(am__append_8) $(am__append_9)
 EXTRA_DIST = \
@@ -521,6 +521,7 @@ distclean-compile:
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eina_ustringshare.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eina_value.Plo@am__quote@
 @AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eina_xattr.Plo@am__quote@
+@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/eina_abi.Plo@am__quote@
 
 .c.o:
 @am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
diff --git a/src/lib/eina_abi.c b/src/lib/eina_abi.c
new file mode 100644
index 0000000..0155a99
--- /dev/null
+++ b/src/lib/eina_abi.c
@@ -0,0 +1,59 @@
+/* EINA - EFL data type library
+ * Copyright (C) 2010 Cedric Bail
+ *
+ * This library is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU Lesser General Public
+ * License as published by the Free Software Foundation; either
+ * version 2.1 of the License, or (at your option) any later version.
+ *
+ * This library is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+ * Lesser General Public License for more details.
+ *
+ * You should have received a copy of the GNU Lesser General Public
+ * License along with this library;
+ * if not, see <http://www.gnu.org/licenses/>.
+ */
+
+/* This file is here to preserve ABI compatibility, don't touch
+   it unless you know what you are doing */
+
+#ifdef HAVE_CONFIG_H
+# include "config.h"
+#endif
+
+#include <assert.h>
+#include <stdlib.h>
+#include <string.h>
+#include <stdio.h>
+
+#include "eina_config.h"
+#include "eina_private.h"
+#include "eina_error.h"
+#include "eina_log.h"
+#include "eina_safety_checks.h"
+
+typedef struct _Eina_Array Eina_Array;
+struct _Eina_Array
+{
+#define EINA_ARRAY_VERSION 1
+   int          version;
+
+   void       **data;
+   unsigned int total;
+   unsigned int count;
+   unsigned int step;
+   EINA_MAGIC
+};
+
+EAPI void
+eina_array_clean(Eina_Array *array)
+{
+   EINA_SAFETY_ON_NULL_RETURN(array);
+
+   assert(array->version == EINA_ARRAY_VERSION);
+
+   array->count = 0;
+}
+
